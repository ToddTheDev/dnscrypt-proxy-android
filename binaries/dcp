#!/system/bin/sh
# Originally written by: https://raw.githubusercontent.com/adit/dnscrypt-proxy/master/binaries/dcp

HR="---------------------------------------"
SERVICE=dnscrypt-proxy
VERSION=$(dnscrypt-proxy --version)
SERVICE_D=/data/adb/service.d/dnscrypt-proxy.sh

root_check (){
	echo "- checking root..."
	id="$(id)"; id="${id#*=}"; id="${id%%\(*}"; id="${id%% *}"
	if [ "$id" != "0" ] && [ "$id" != "root" ]; then
	    echo "- root permission was not granted, exiting..."
	    sleep 3
		exit
	else
		sleep 0.5
		echo "- root permission was granted"
	fi
}

init(){
	clear
	sleep 1
	echo ""
	echo $HR
	echo ""
	echo "DNSCrypt-Proxy2 for Android"
	echo "https://github.com/CHEF-KOCH/dnscrypt-proxy-android"
	echo ""
	echo $HR
	echo ""
	sleep 2
	root_check
	sleep 0.5
	echo "- using $SERVICE v$VERSION"
	sleep 0.5
}

disable_dns_redirect(){
    iptables -t nat -D OUTPUT -p tcp ! -d 185.228.168.9 --dport 53 -j DNAT --to-destination 127.0.0.1:5354 > /dev/null 2>&1
    iptables -t nat -D OUTPUT -p udp ! -d 185.228.168.9 --dport 53 -j DNAT --to-destination 127.0.0.1:5354 > /dev/null 2>&1
    ip6tables -t nat -D OUTPUT -p tcp ! -d 2a0d:2a00:1::2 --dport 53 -j DNAT --to-destination [::1]:5354 > /dev/null 2>&1
    ip6tables -t nat -D OUTPUT -p udp ! -d 2a0d:2a00:1::2 --dport 53 -j DNAT --to-destination [::1]:5354 > /dev/null 2>&1
}

enable_dns_redirect(){
     iptables -t nat -A OUTPUT -p tcp ! -d 185.228.168.9 --dport 53 -j DNAT --to-destination 127.0.0.1:5354 > /dev/null 2>&1
     iptables -t nat -A OUTPUT -p udp ! -d 185.228.168.9 --dport 53 -j DNAT --to-destination 127.0.0.1:5354 > /dev/null 2>&1
     ip6tables -t nat -A OUTPUT -p tcp ! -d 2a0d:2a00:1::2 --dport 53 -j DNAT --to-destination [::1]:5354 > /dev/null 2>&1
     ip6tables -t nat -A OUTPUT -p udp ! -d 2a0d:2a00:1::2 --dport 53 -j DNAT --to-destination [::1]:5354 > /dev/null 2>&1
}

start_service(){
if pgrep -x $SERVICE >/dev/null
then
    echo "- $SERVICE is already running, exiting..."
    sleep 3
else
    echo "- starting $SERVICE..."
    dnscrypt-proxy -config  /data/media/0/dnscrypt-proxy/dnscrypt-proxy.toml > /dev/null 2>&1 &
    if [ -e $SERVICE_D ]; then
       sleep 0.5
       echo "- enabling dns redirect..."
       enable_dns_redirect
    fi
fi
}

stop_service(){
if ! pgrep -x "$SERVICE" >/dev/null
then
    echo "- $SERVICE is already stopped, exiting..."
    sleep 3
else
    echo "- stopping $SERVICE..."
    pkill $SERVICE
    if [ -e $SERVICE_D ]; then
      sleep 0.5
      echo "- disabling dns redirect..."
      disable_dns_redirect
    fi
fi
}

case $1 in

'start')
    init
    start_service
    ;;

'stop')
    init
    stop_service
    ;;

'restart')
    init
    stop_service
    start_service
    echo "- done, exiting..."
    sleep 3
    ;;
    
'enable')
    init
    echo "- installing dns redirect service on magisk..."
    echo "#!/system/bin" > $SERVICE_D
    echo "" >> $SERVICE_D
    echo "iptables -t nat -A OUTPUT -p tcp ! -d 1.1.1.1 --dport 53 -j DNAT --to-destination 127.0.0.1:5354" >> $SERVICE_D
    echo "iptables -t nat -A OUTPUT -p udp ! -d 1.1.1.1 --dport 53 -j DNAT --to-destination 127.0.0.1:5354" >> $SERVICE_D
    echo "ip6tables -t nat -A OUTPUT -p tcp ! -d 1.1.1.1 --dport 53 -j DNAT --to-destination [::1]:5354" >> $SERVICE_D
    echo "ip6tables -t nat -A OUTPUT -p udp ! -d 1.1.1.1 --dport 53 -j DNAT --to-destination [::1]:5354" >> $SERVICE_D
    chmod 0755 $SERVICE_D
    sleep 0.5
    echo "- enabling dns redirect..."
    enable_dns_redirect
    sleep 0.5
    echo "- done, exiting..."
    sleep 3
     ;;
'disable')
     init
     if [ -e $SERVICE_D ]; then
      echo "- uninstalling dns redirect service on magisk..."
      rm -f $SERVICE_D
      sleep 0.5
      disable_dns_redirect
      sleep 0.5
      echo "- done, exiting..."
      sleep 3
     else
      echo "- service is already disabled."
      sleep 3
     fi
     ;;

*)
	echo "usage:  dcp {start|stop|restart|enable|disable}"
    ;;
esac
